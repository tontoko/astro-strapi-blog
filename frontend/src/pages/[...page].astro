---
import { GraphQLClient } from "graphql-request";
import Layout from "../layouts/Layout.astro";
import { QueryPostsDocument, QueryBlogSettingsDocument } from "../gql/graphql";
import { marked } from "marked";
import AppHeader from "../components/AppHeader.astro";
import type { GetStaticPaths, InferGetStaticPropsType } from "astro";

export const getStaticPaths = (async ({ paginate }) => {
  const client = new GraphQLClient(`http://127.0.0.1:1337/graphql`);
  const postsData =
    (await client.request(QueryPostsDocument)).posts?.data ?? [];

  return paginate(postsData, { pageSize: 5 });
}) satisfies GetStaticPaths;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const client = new GraphQLClient(`http://127.0.0.1:1337/graphql`);
const { page } = Astro.props;
const { data, currentPage, lastPage } = page;
const blogTitle = (await client.request(QueryBlogSettingsDocument)).blogSetting
  ?.data?.attributes?.title;
---

<Layout title={blogTitle ?? undefined}>
  <AppHeader blogTitle={blogTitle ?? undefined} />
  <main class="prose mx-10 md:mx-20 my-10 dark:prose-invert divide-y">
    {
      data.map((post) => {
        return (
          <div>
            <a href={`/blogs/${post.attributes?.slug}`}>
              <article class="break-words pb-8">
                <h3>{post?.attributes?.title}</h3>
                <div
                  class="line-clamp-3"
                  set:html={marked(post?.attributes?.content ?? "")}
                />
              </article>
            </a>
          </div>
        );
      })
    }
  </main>
  <footer class="prose dark:prose-invert max-w-none mx-14">
    <nav class="flex justify-center">
      <div class="flex justify-between max-w-xs gap-6">
        {
          currentPage !== 1 ? (
            <a href={`/${currentPage === 2 ? "" : currentPage - 1}`}>
              Previous
            </a>
          ) : (
            <span>Previous</span>
          )
        }
        {
          currentPage !== lastPage ? (
            <a href={`/${currentPage + 1}`}>Next</a>
          ) : (
            <span>Next</span>
          )
        }
      </div>
    </nav>
  </footer>
</Layout>
